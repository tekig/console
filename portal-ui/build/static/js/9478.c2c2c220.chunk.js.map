{"version":3,"file":"static/js/9478.c2c2c220.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/NotificationEndpoints/ConfTargetGeneric.tsx","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/debounce.js","../node_modules/lodash/now.js","../node_modules/lodash/toNumber.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) => {\n  return createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n      flex: 1,\n    },\n    inputBoxSpacer: {\n      marginBottom: 7,\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      minWidth: 162,\n    },\n  });\n};\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChange(elementsString);\n  }, 500);\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <div className={classes.inputBoxSpacer}>\n        <InputBoxWrapper\n          id={`${name}-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentElements[index]}\n          onChange={onChangeElement}\n          index={index}\n          key={`csv-${name}-${index.toString()}`}\n          placeholder={commonPlaceholder}\n          overlayIcon={\n            index === currentElements.length - 1 ? <AddIcon /> : null\n          }\n          overlayAction={() => {\n            addEmptyLine(currentElements);\n          }}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(CSVMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IElementValue, KVField } from \"../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n  });\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[]\n) => {\n  let defValue = type === \"on|off\" ? \"false\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value;\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  classes,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = [];\n    fields.forEach((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      values.push(stateInsert);\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    switch (field.type) {\n      case \"on|off\":\n        const value = valueHolder[item] ? valueHolder[item].value : \"false\";\n\n        return (\n          <FormSwitchWrapper\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"true\" : \"false\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"true\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={valueHolder[item] ? valueHolder[item].value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string) =>\n              setValueElement(field.name, value, item)\n            }\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            multiline={!!field.multiline}\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid xs={12} item className={classes.fieldBox}>\n        {fieldsElements.map((field, item) => (\n          <Grid item xs={12} key={field.name} className={classes.formFieldRow}>\n            {fieldDefinition(field, item)}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfTargetGeneric);\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","alignItems","paddingTop","flexWrap","display","textBoxContainer","flexGrow","position","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","label","onChange","value","id","name","disabled","tooltip","index","error","required","placeholder","classes","inputProps","item","xs","className","fieldContainer","errorInField","htmlFor","tooltipContainer","title","placement","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","inputWithBorder","border","height","overflowY","marginTop","flex","inputBoxSpacer","marginBottom","minWidth","elements","commonPlaceholder","withBorder","useState","currentElements","setCurrentElements","bottomList","createRef","useEffect","length","elementsSplit","split","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeElement","e","persist","updatedElement","get","target","debounce","elementsString","filter","element","trim","join","inputs","map","InputBoxWrapper","toString","overlayIcon","AddIcon","overlayAction","elementsUp","cpList","addEmptyLine","Grid","InputLabel","Tooltip","HelpIcon","ref","valueDef","key","type","defaults","defValue","storedConfig","find","formFieldStyles","formFieldRow","modalBasic","fields","defaultVals","valueHolder","setValueHolder","fieldsElements","defValList","values","forEach","field","stateInsert","setValueElement","valuesDup","fieldDefinition","FormSwitchWrapper","checked","CommentBoxWrapper","container","fieldBox","trimmedEndIndex","require","reTrimStart","module","exports","string","slice","replace","reWhitespace","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}