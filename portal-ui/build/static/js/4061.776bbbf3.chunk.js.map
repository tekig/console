{"version":3,"file":"static/js/4061.776bbbf3.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/Groups/DeleteGroup.tsx","screens/Console/Groups/AddGroupMember.tsx","screens/Console/Groups/GroupDetailsHeader.tsx","screens/Console/Groups/GroupsDetails.tsx","screens/Console/Groups/UsersSelectors.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Policies/SetPolicy.tsx","utils/sortFunctions.ts"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","import React from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const [value, setValue] = React.useState(selectedTab);\n\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\n\ninterface IDeleteGroup {\n  selectedGroup: string;\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeleteGroup = ({\n  selectedGroup,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n  setErrorSnackMessage,\n}: IDeleteGroup) => {\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroup) {\n    return null;\n  }\n  const onDeleteGroup = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/group?name=${encodeURI(selectedGroup)}`);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroup}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete group\n          <br />\n          <b>{selectedGroup}</b>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(DeleteGroup);\n","import React, { useState } from \"react\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button } from \"@mui/material\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AddMembersToGroupIcon } from \"../../../icons\";\n\ntype UserPickerModalProps = {\n  classes?: any;\n  title?: string;\n  preSelectedUsers?: string[];\n  selectedGroup?: string;\n  open: boolean;\n  onClose: () => void;\n  onSaveClick: () => void;\n  groupStatus?: string;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    userSelector: {\n      \"& .MuiPaper-root\": {\n        padding: 0,\n        marginBottom: 15,\n      },\n    },\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...modalBasic,\n  });\n\nconst AddGroupMember = ({\n  classes,\n  title = \"\",\n  groupStatus = \"enabled\",\n  preSelectedUsers = [],\n  selectedGroup = \"\",\n  open,\n  onClose,\n}: UserPickerModalProps) => {\n  const [selectedUsers, setSelectedUsers] = useState(preSelectedUsers);\n\n  function addMembersToGroup() {\n    return api\n      .invoke(\"PUT\", `/api/v1/group?name=${encodeURI(selectedGroup)}`, {\n        group: selectedGroup,\n        members: selectedUsers,\n        status: groupStatus,\n      })\n      .then((res) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        onClose();\n        setModalErrorSnackMessage(err);\n      });\n  }\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={onClose}\n      title={title}\n      titleIcon={<AddMembersToGroupIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.formFieldRow}>\n            <PredefinedList label={`Selected Group`} content={selectedGroup} />\n          </div>\n          <div className={classes.userSelector}>\n            <UsersSelectors\n              selectedUsers={selectedUsers}\n              setSelectedUsers={setSelectedUsers}\n              editMode={!selectedGroup}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.modalButtonBar}>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            setSelectedUsers(preSelectedUsers);\n          }}\n        >\n          Reset\n        </Button>\n\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            addMembersToGroup();\n          }}\n        >\n          Save\n        </Button>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\nexport default withStyles(styles)(connector(AddGroupMember));\n","import React, { Fragment } from \"react\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport BackLink from \"../../../common/BackLink\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    breadcrumLink: {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n  });\n\ntype DetailsHeaderProps = {\n  classes: any;\n};\n\nconst GroupDetailsHeader = ({ classes }: DetailsHeaderProps) => {\n  return (\n    <PageHeader\n      label={\n        <Fragment>\n          <BackLink to={IAM_PAGES.GROUPS} label={\"Groups\"} />\n        </Fragment>\n      }\n      actions={<React.Fragment />}\n    />\n  );\n};\n\nexport default withStyles(styles)(GroupDetailsHeader);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport {\n  IAMPoliciesIcon,\n  TrashIcon,\n  GroupsIcon,\n  AddIcon,\n} from \"../../../icons\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport history from \"../../../history\";\nimport api from \"../../../common/api\";\nimport SetPolicy from \"../Policies/SetPolicy\";\nimport AddGroupMember from \"./AddGroupMember\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport DeleteGroup from \"./DeleteGroup\";\nimport VerticalTabs from \"../Common/VerticalTabs/VerticalTabs\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\nimport SearchBox from \"../Common/SearchBox\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  SecureComponent,\n  hasPermission,\n} from \"../../../common/SecureComponent\";\nimport GroupDetailsHeader from \"./GroupDetailsHeader\";\nimport RBIconButton from \"../Buckets/BucketDetails/SummaryItems/RBIconButton\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageContainer: {\n      border: \"1px solid #EAEAEA\",\n      width: \"100%\",\n    },\n    breadcrumLink: {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n    statusLabel: {\n      fontSize: \".8rem\",\n      marginRight: \".7rem\",\n    },\n    statusValue: {\n      fontWeight: \"bold\",\n      fontSize: \".9rem\",\n      marginRight: \".7rem\",\n    },\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 280,\n    },\n    ...tableStyles,\n    ...spacingUtils,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n\n      alignItems: \"center\",\n      \"& h1\": {\n        flex: 1,\n      },\n      \"& button\": {\n        marginLeft: \".8rem\",\n      },\n      \"@media (max-width: 900px)\": {\n        justifyContent: \"flex-end\",\n        \"& h1\": {\n          display: \"none\",\n        },\n        \"& button\": {\n          whiteSpace: \"nowrap\",\n          textOverflow: \"ellipsis\",\n        },\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IGroupDetailsProps {\n  classes: any;\n  match: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\ntype GroupInfo = {\n  members?: any[];\n  name?: string;\n  policy?: string;\n  status?: string;\n};\n\nexport const formatPolicy = (policy: string = \"\"): string[] => {\n  if (policy.length <= 0) return [];\n  return policy.split(\",\");\n};\n\nexport const getPoliciesAsString = (policies: string[]): string => {\n  return policies.join(\", \");\n};\n\nconst GroupsDetails = ({ classes }: IGroupDetailsProps) => {\n  const [groupDetails, setGroupDetails] = useState<GroupInfo>({});\n\n  /*Modals*/\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [usersOpen, setUsersOpen] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [memberFilter, setMemberFilter] = useState<string>(\"\");\n\n  //const [policyFilter, setPolicyFilter] = useState<string>(\"\");\n\n  const { groupName = \"\" } = useParams<Record<string, string>>();\n\n  const { members = [], policy = \"\", status: groupEnabled } = groupDetails;\n\n  const filteredMembers = members.filter((elementItem) =>\n    elementItem.includes(memberFilter)\n  );\n\n  useEffect(() => {\n    if (groupName) {\n      fetchGroupInfo();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groupName]);\n\n  const groupPolicies = formatPolicy(policy);\n  const isGroupEnabled = groupEnabled === \"enabled\";\n  const memberActionText = members.length > 0 ? \"Edit Members\" : \"Add Members\";\n\n  const getGroupDetails = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_GROUP,\n  ]);\n\n  function fetchGroupInfo() {\n    if (getGroupDetails) {\n      api\n        .invoke(\"GET\", `/api/v1/group?name=${encodeURI(groupName)}`)\n        .then((res: any) => {\n          setGroupDetails(res);\n        })\n        .catch((err) => {\n          setModalErrorSnackMessage(err);\n          setGroupDetails({});\n        });\n    }\n  }\n\n  function toggleGroupStatus(nextStatus: boolean) {\n    return api\n      .invoke(\"PUT\", `/api/v1/group?name=${encodeURI(groupName)}`, {\n        group: groupName,\n        members: members,\n        status: nextStatus ? \"enabled\" : \"disabled\",\n      })\n      .then((res) => {\n        fetchGroupInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n      });\n  }\n\n  const groupsTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Members</PanelTitle>\n        <SearchBox\n          placeholder={\"Search members\"}\n          onChange={(searchText) => {\n            setMemberFilter(searchText);\n          }}\n          overrideClass={classes.searchField}\n          value={memberFilter}\n        />\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={[IAM_SCOPES.ADMIN_ADD_USER_TO_GROUP]}\n          errorProps={{ disabled: true }}\n        >\n          <RBIconButton\n            tooltip={memberActionText}\n            text={memberActionText}\n            variant=\"contained\"\n            color=\"primary\"\n            icon={<AddIcon />}\n            onClick={() => {\n              setUsersOpen(true);\n            }}\n          />\n        </SecureComponent>\n      </div>\n\n      <div className={classes.tableBlock}>\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={[IAM_SCOPES.ADMIN_LIST_USERS]}\n          errorProps={{ disabled: true }}\n        >\n          <TableWrapper\n            itemActions={[\n              {\n                type: \"view\",\n                onClick: (userName) => {\n                  history.push(`${IAM_PAGES.USERS}/${userName}`);\n                },\n              },\n            ]}\n            columns={[{ label: \"Access Key\", elementKey: \"\" }]}\n            selectedItems={[]}\n            isLoading={false}\n            records={filteredMembers}\n            entityName=\"Users\"\n            idField=\"\"\n          />\n        </SecureComponent>\n      </div>\n    </React.Fragment>\n  );\n\n  const policiesTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Policies</PanelTitle>\n\n        <RBIconButton\n          tooltip={`Set Policies`}\n          text={`Set Policies`}\n          variant=\"contained\"\n          color=\"primary\"\n          icon={<IAMPoliciesIcon />}\n          onClick={() => {\n            setPolicyOpen(true);\n          }}\n        />\n      </div>\n      <div className={classes.tableBlock}>\n        <TableWrapper\n          itemActions={[\n            {\n              type: \"view\",\n              onClick: (policy) => {\n                history.push(`${IAM_PAGES.POLICIES}/${policy}`);\n              },\n            },\n          ]}\n          columns={[{ label: \"Policy\", elementKey: \"\" }]}\n          isLoading={false}\n          records={groupPolicies}\n          entityName=\"Policies\"\n          idField=\"\"\n        />\n      </div>\n    </React.Fragment>\n  );\n  return (\n    <React.Fragment>\n      <GroupDetailsHeader />\n\n      <PageLayout className={classes.pageContainer}>\n        <Grid item xs={12}>\n          <ScreenTitle\n            icon={\n              <Fragment>\n                <GroupsIcon width={40} />\n              </Fragment>\n            }\n            title={groupName}\n            subTitle={null}\n            actions={\n              <Fragment>\n                <span className={classes.statusLabel}>Group Status:</span>\n                <span id=\"group-status\" className={classes.statusValue}>\n                  {isGroupEnabled ? \"Enabled\" : \"Disabled\"}\n                </span>\n                <SecureComponent\n                  resource={CONSOLE_UI_RESOURCE}\n                  scopes={[\n                    IAM_SCOPES.ADMIN_ENABLE_GROUP,\n                    IAM_SCOPES.ADMIN_DISABLE_GROUP,\n                  ]}\n                  errorProps={{ disabled: true }}\n                  matchAll\n                >\n                  <FormSwitchWrapper\n                    indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                    checked={isGroupEnabled}\n                    value={\"group_enabled\"}\n                    id=\"group-status\"\n                    name=\"group-status\"\n                    onChange={() => {\n                      toggleGroupStatus(!isGroupEnabled);\n                    }}\n                    switchOnly\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  resource={CONSOLE_UI_RESOURCE}\n                  scopes={[IAM_SCOPES.ADMIN_REMOVE_USER_FROM_GROUP]}\n                  errorProps={{ disabled: true }}\n                >\n                  <div className={classes.spacerLeft}>\n                    <RBIconButton\n                      tooltip={`Delete Group`}\n                      text={``}\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      icon={<TrashIcon />}\n                      onClick={() => {\n                        setDeleteOpen(true);\n                      }}\n                    />\n                  </div>\n                </SecureComponent>\n              </Fragment>\n            }\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <VerticalTabs>\n            {{\n              tabConfig: { label: \"Members\" },\n              content: groupsTabContent,\n            }}\n            {{\n              tabConfig: { label: \"Policies\" },\n              content: policiesTabContent,\n            }}\n          </VerticalTabs>\n        </Grid>\n      </PageLayout>\n      {/*Modals*/}\n      {policyOpen ? (\n        <SetPolicy\n          open={policyOpen}\n          selectedGroup={groupName}\n          selectedUser={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n            fetchGroupInfo();\n          }}\n        />\n      ) : null}\n\n      {usersOpen ? (\n        <AddGroupMember\n          selectedGroup={groupName}\n          onSaveClick={() => {}}\n          title={memberActionText}\n          groupStatus={groupEnabled}\n          preSelectedUsers={members}\n          open={usersOpen}\n          onClose={() => {\n            setUsersOpen(false);\n            fetchGroupInfo();\n          }}\n        />\n      ) : null}\n\n      {deleteOpen && (\n        <DeleteGroup\n          deleteOpen={deleteOpen}\n          selectedGroup={groupName}\n          closeDeleteModalAndRefresh={(isDelSuccess: boolean) => {\n            setDeleteOpen(false);\n            if (isDelSuccess) {\n              history.push(IAM_PAGES.GROUPS);\n            }\n          }}\n        />\n      )}\n      {/*Modals*/}\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(GroupsDetails));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { UsersList } from \"../Users/types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      // paddingTop: 15,\n      boxShadow: \"none\",\n      border: 0,\n    },\n\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    searchBox: {\n      flex: 1,\n    },\n    ...actionsTray,\n    actionsTitle: {\n      fontSize: 14,\n      alignSelf: \"center\",\n      minWidth: 160,\n      marginRight: 10,\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: theme.spacing(3),\n      border: \"1px solid #EAEAEA\",\n      fontSize: \".9rem\",\n    },\n    ...selectorsCommon,\n  });\n\nconst UsersSelectors = ({\n  classes,\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n  setModalErrorSnackMessage,\n}: IGroupsProps) => {\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/users`)\n      .then((res: UsersList) => {\n        let users = get(res, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n        isLoading(false);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          {loading && <LinearProgress />}\n          {records !== null && records.length > 0 ? (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <label className={classes.actionsTitle}>\n                  {editMode ? \"Edit Members\" : \"Assign Users\"}\n                </label>\n                <div className={classes.searchBox}>\n                  <SearchBox\n                    placeholder=\"Filter Users\"\n                    adornmentPosition=\"end\"\n                    onChange={setFilter}\n                    value={filter}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.tableBlock}>\n                <TableWrapper\n                  columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n                  onSelect={selectionChanged}\n                  selectedItems={selUsers}\n                  isLoading={loading}\n                  records={filteredRecords}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                  customPaperHeight={classes.multiSelectTable}\n                />\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <div className={classes.noFound}>No Users to display</div>\n          )}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(UsersSelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { PolicyList } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n  setSelectedPolicy: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({\n  classes,\n  selectedPolicy = [],\n  setSelectedPolicy,\n  setModalErrorSnackMessage,\n}: ISelectPolicyProps) => {\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api\n      .invoke(\"GET\", `/api/v1/policies?limit=1000`)\n      .then((res: PolicyList) => {\n        const policies = res.policies === null ? [] : res.policies;\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedPolicy]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    setSelectedPolicy(elements);\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              <span className={classes.fieldLabel}>Assign Policies</span>\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Filter Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={12} className={classes.tableBlock}>\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={selectedPolicy}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PolicySelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalBasic,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { User } from \"../Users/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport PolicySelectors from \"./PolicySelectors\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface ISetPolicyProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: User | null;\n  selectedGroup: string | null;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...spacingUtils,\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \".9rem\",\n    },\n  });\n\nconst SetPolicy = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  selectedGroup,\n  setModalErrorSnackMessage,\n  open,\n}: ISetPolicyProps) => {\n  //Local States\n  const [loading, setLoading] = useState<boolean>(false);\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\n\n  const setPolicyAction = () => {\n    let entity = \"user\";\n    let value = null;\n    if (selectedGroup !== null) {\n      entity = \"group\";\n      value = selectedGroup;\n    } else {\n      if (selectedUser !== null) {\n        value = selectedUser.accessKey;\n      }\n    }\n\n    setLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/set-policy`, {\n        name: selectedPolicy,\n        entityName: value,\n        entityType: entity,\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  const fetchGroupInformation = () => {\n    if (selectedGroup) {\n      api\n        .invoke(\"GET\", `/api/v1/group?name=${encodeURI(selectedGroup)}`)\n        .then((res: any) => {\n          const groupPolicy: String = get(res, \"policy\", \"\");\n          setActualPolicy(groupPolicy.split(\",\"));\n          setSelectedPolicy(groupPolicy.split(\",\"));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setModalErrorSnackMessage(err);\n          setLoading(false);\n        });\n    }\n  };\n\n  const resetSelection = () => {\n    setSelectedPolicy(actualPolicy);\n  };\n\n  useEffect(() => {\n    if (open) {\n      if (selectedGroup !== null) {\n        fetchGroupInformation();\n        return;\n      }\n\n      const userPolicy: string[] = get(selectedUser, \"policy\", []);\n      setActualPolicy(userPolicy);\n      setSelectedPolicy(userPolicy);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, selectedGroup, selectedUser]);\n\n  const userName = get(selectedUser, \"accessKey\", \"\");\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title=\"Set Policies\"\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <PredefinedList\n            label={`Selected ${selectedGroup !== null ? \"Group\" : \"User\"}`}\n            content={selectedGroup !== null ? selectedGroup : userName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <PredefinedList\n            label={\"Current Policy\"}\n            content={actualPolicy.join(\", \")}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <div className={classes.tableBlock}>\n            <PolicySelectors\n              selectedPolicy={selectedPolicy}\n              setSelectedPolicy={setSelectedPolicy}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.buttonContainer}>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.spacerRight}\n          onClick={resetSelection}\n        >\n          Reset\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={setPolicyAction}\n        >\n          Save\n        </Button>\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(SetPolicy));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\ninterface userInterface {\n  accessKey: string;\n}\n\ninterface policyInterface {\n  name: string;\n}\n\nexport const usersSort = (a: userInterface, b: userInterface) => {\n  if (a.accessKey > b.accessKey) {\n    return 1;\n  }\n  if (a.accessKey < b.accessKey) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policySort = (a: policyInterface, b: policyInterface) => {\n  if (a.name > b.name) {\n    return 1;\n  }\n  if (a.name < b.name) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const stringSort = (a: string, b: string) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n"],"names":["withStyles","theme","createStyles","predefinedList","classes","label","content","multiLine","Fragment","className","prefinedContainer","item","xs","predefinedTitle","innerContentMultiline","innerContent","onSuccess","onError","useState","isLoading","setIsLoading","method","url","data","api","then","res","catch","err","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","padding","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","useEffect","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","root","titleText","closeContainer","id","closeButton","onClick","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","margin","fontSize","searchField","adornment","placeholder","onChange","adornmentPosition","overrideClass","value","inputProps","disableUnderline","position","InputProps","e","target","variant","tabStripStyle","minHeight","tabsContainer","display","height","tabsHeaderContainer","background","borderRight","flexFlow","alignItems","justifyContent","borderBottom","marginRight","marginBottom","fontWeight","tabContentContainer","tabPanel","flexDirection","selectedTab","routes","isRouteTabs","React","setValue","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","headerList","contentList","forEach","child","push","tabConfig","newValue","orientation","scrollButtons","tabList","map","index","tabHeader","style","disableTouchRipple","focusRipple","mapDispatchToProps","setErrorSnackMessage","selectedGroup","deleteOpen","closeDeleteModalAndRefresh","useApi","deleteLoading","invokeDeleteApi","confirmText","isOpen","onConfirm","encodeURI","confirmationContent","setModalErrorSnackMessage","buttonContainer","textAlign","marginTop","userSelector","modalStyleUtils","formFieldStyles","modalBasic","groupStatus","preSelectedUsers","selectedUsers","setSelectedUsers","ModalWrapper","Grid","container","formFieldRow","PredefinedList","UsersSelectors","editMode","modalButtonBar","Button","color","group","members","status","breadcrumLink","textDecoration","PageHeader","BackLink","to","IAM_PAGES","actions","formatPolicy","policy","split","getPoliciesAsString","policies","join","pageContainer","border","statusLabel","statusValue","tableStyles","spacingUtils","actionsTray","flex","marginLeft","whiteSpace","textOverflow","containerForHeader","spacing","groupDetails","setGroupDetails","policyOpen","setPolicyOpen","usersOpen","setUsersOpen","setDeleteOpen","memberFilter","setMemberFilter","useParams","groupName","groupEnabled","filteredMembers","filter","elementItem","includes","fetchGroupInfo","groupPolicies","isGroupEnabled","memberActionText","getGroupDetails","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","groupsTabContent","PanelTitle","SearchBox","searchText","SecureComponent","resource","scopes","errorProps","disabled","RBIconButton","tooltip","text","icon","tableBlock","TableWrapper","itemActions","userName","history","columns","elementKey","selectedItems","records","entityName","idField","policiesTabContent","PageLayout","ScreenTitle","subTitle","matchAll","FormSwitchWrapper","indicatorLabels","checked","name","nextStatus","switchOnly","spacerLeft","VerticalTabs","SetPolicy","selectedUser","closeModalAndRefresh","onSaveClick","DeleteGroup","isDelSuccess","overflow","boxShadow","searchBox","actionsTitle","alignSelf","minWidth","noFound","selectorsCommon","setRecords","loading","setFilter","fetchUsers","useCallback","users","get","sort","usersSort","selUsers","filteredRecords","accessKey","onSelect","targetD","elements","element","customPaperHeight","multiSelectTable","fieldLabel","filterBox","selectedPolicy","setSelectedPolicy","fetchPolicies","policySort","setLoading","actualPolicy","setActualPolicy","groupPolicy","userPolicy","spacerRight","entity","entityType","a","b","stringSort"],"sourceRoot":""}