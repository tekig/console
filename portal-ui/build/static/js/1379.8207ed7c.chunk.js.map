{"version":3,"file":"static/js/1379.8207ed7c.chunk.js","mappings":"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","sources":["screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/Tenants/TenantDetails/Pools/Details/PoolsListing.tsx","screens/Console/Common/UsageBarWrapper/StackRow.tsx","screens/Console/Tenants/TenantDetails/Pools/Details/PoolDetails.tsx","screens/Console/Tenants/TenantDetails/PoolsSummary.tsx"],"sourcesContent":["import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../../store\";\nimport { connect } from \"react-redux\";\nimport { setErrorSnackMessage } from \"../../../../../../actions\";\nimport { setSelectedPool } from \"../../../actions\";\nimport { IPool, ITenant } from \"../../../ListTenants/types\";\nimport Grid from \"@mui/material/Grid\";\nimport { TextField } from \"@mui/material\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../../../../icons/SearchIcon\";\nimport RBIconButton from \"../../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport { AddIcon } from \"../../../../../../icons\";\nimport TableWrapper from \"../../../../Common/TableWrapper/TableWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\n\ninterface IPoolsSummary {\n  classes: any;\n  tenant: ITenant | null;\n  loadingTenant: boolean;\n  history: any;\n  setPoolDetailsView: () => void;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  setSelectedPool: typeof setSelectedPool;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...actionsTray,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PoolsListing = ({\n  classes,\n  tenant,\n  loadingTenant,\n  setSelectedPool,\n  history,\n  setPoolDetailsView,\n}: IPoolsSummary) => {\n  const [pools, setPools] = useState<IPool[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (tenant) {\n      const resPools = !tenant.pools ? [] : tenant.pools;\n      setPools(resPools);\n    }\n  }, [tenant]);\n\n  const filteredPools = pools.filter((pool) => {\n    if (pool.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true;\n    }\n\n    return false;\n  });\n\n  const listActions = [\n    {\n      type: \"view\",\n      onClick: (selectedValue: IPool) => {\n        setSelectedPool(selectedValue.name);\n        setPoolDetailsView();\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TextField\n          placeholder=\"Filter\"\n          className={classes.searchField}\n          id=\"search-resource\"\n          label=\"\"\n          onChange={(event) => {\n            setFilter(event.target.value);\n          }}\n          InputProps={{\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"standard\"\n        />\n\n        <RBIconButton\n          tooltip={\"Expand Tenant\"}\n          text={\"Expand Tenant\"}\n          onClick={() => {\n            history.push(\n              `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n                tenant?.name || \"\"\n              }/add-pool`\n            );\n          }}\n          icon={<AddIcon />}\n          color=\"primary\"\n          variant={\"contained\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.tableBlock}>\n        <TableWrapper\n          itemActions={listActions}\n          columns={[\n            { label: \"Name\", elementKey: \"name\" },\n            { label: \"Capacity\", elementKey: \"capacity\" },\n            { label: \"# of Instances\", elementKey: \"servers\" },\n            { label: \"# of Drives\", elementKey: \"volumes\" },\n          ]}\n          isLoading={loadingTenant}\n          records={filteredPools}\n          entityName=\"Servers\"\n          idField=\"name\"\n          customEmptyMessage=\"No Pools found\"\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n  setSelectedPool,\n});\n\nexport default withStyles(styles)(connector(PoolsListing));\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\nconst StackRow = ({\n  children = null,\n  ...restProps\n}: {\n  children?: any;\n  [x: string]: any;\n}) => {\n  return (\n    <Stack\n      direction={{ xs: \"column\", sm: \"row\" }}\n      justifyContent=\"space-between\"\n      margin={\"5px 0 5px 0\"}\n      spacing={{ xs: 1, sm: 2, md: 4 }}\n      {...restProps}\n    >\n      {children}\n    </Stack>\n  );\n};\nexport default StackRow;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  spacingUtils,\n  tableStyles,\n  tenantDetailsStyles,\n  textStyleUtils,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../../../actions\";\nimport { AppState } from \"../../../../../../store\";\nimport { setTenantDetailsLoad } from \"../../../actions\";\nimport { Box } from \"@mui/material\";\nimport { ITenant } from \"../../../ListTenants/types\";\nimport Grid from \"@mui/material/Grid\";\nimport LabelValuePair from \"../../../../Common/UsageBarWrapper/LabelValuePair\";\nimport { niceBytesInt } from \"../../../../../../common/utils\";\nimport StackRow from \"../../../../Common/UsageBarWrapper/StackRow\";\nimport RBIconButton from \"../../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport { EditTenantIcon } from \"../../../../../../icons\";\n\ninterface IPoolDetails {\n  classes: any;\n  history: any;\n  loadingTenant: boolean;\n  tenant: ITenant | null;\n  selectedPool: string | null;\n  setTenantDetailsLoad: typeof setTenantDetailsLoad;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...spacingUtils,\n    ...textStyleUtils,\n    ...tenantDetailsStyles,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst stylingLayout = {\n  border: \"#EAEAEA 1px solid\",\n  borderRadius: \"3px\",\n  padding: \"0px 20px\",\n  position: \"relative\",\n};\n\nconst twoColCssGridLayoutConfig = {\n  display: \"grid\",\n  gridTemplateColumns: { xs: \"1fr\", sm: \"2fr 1fr\" },\n  gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n  gap: 2,\n  padding: \"15px\",\n};\n\nconst PoolDetails = ({ tenant, selectedPool, history }: IPoolDetails) => {\n  const poolInformation =\n    tenant?.pools.find((pool) => pool.name === selectedPool) || null;\n\n  if (poolInformation === null) {\n    return null;\n  }\n\n  let affinityType = \"None\";\n\n  if (poolInformation.affinity) {\n    if (poolInformation.affinity.nodeAffinity) {\n      affinityType = \"Node Selector\";\n    } else {\n      affinityType = \"Default (Pod Anti-Affinity)\";\n    }\n  }\n\n  const HeaderSection = ({ title }: { title: string }) => {\n    return (\n      <StackRow\n        sx={{\n          borderBottom: \"1px solid #eaeaea\",\n          margin: 0,\n          marginBottom: \"20px\",\n        }}\n      >\n        <h3>{title}</h3>\n      </StackRow>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} sx={{ ...stylingLayout }}>\n        <div style={{ position: \"absolute\", right: 20, top: 18 }}>\n          <RBIconButton\n            icon={<EditTenantIcon />}\n            onClick={() => {\n              history.push(\n                `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n                  tenant?.name || \"\"\n                }/edit-pool`\n              );\n            }}\n            text={\"Edit Pool\"}\n            id={\"editPool\"}\n          />\n        </div>\n        <HeaderSection title={\"Pool Configuration\"} />\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          <LabelValuePair label={\"Pool Name\"} value={poolInformation.name} />\n          <LabelValuePair\n            label={\"Total Volumes\"}\n            value={poolInformation.volumes}\n          />\n          <LabelValuePair\n            label={\"Volumes per server\"}\n            value={poolInformation.volumes_per_server}\n          />\n          <LabelValuePair label={\"Capacity\"} value={poolInformation.capacity} />\n        </Box>\n        <HeaderSection title={\"Resources\"} />\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          {poolInformation.resources && (\n            <Fragment>\n              <LabelValuePair\n                label={\"CPU\"}\n                value={poolInformation.resources.requests.cpu}\n              />\n              <LabelValuePair\n                label={\"Memory\"}\n                value={niceBytesInt(poolInformation.resources.requests.memory)}\n              />\n            </Fragment>\n          )}\n          <LabelValuePair\n            label={\"Volume Size\"}\n            value={niceBytesInt(poolInformation.volume_configuration.size)}\n          />\n          <LabelValuePair\n            label={\"Storage Class Name\"}\n            value={poolInformation.volume_configuration.storage_class_name}\n          />\n        </Box>\n        {poolInformation.securityContext &&\n          (poolInformation.securityContext.runAsNonRoot ||\n            poolInformation.securityContext.runAsUser ||\n            poolInformation.securityContext.runAsGroup ||\n            poolInformation.securityContext.fsGroup) && (\n            <Fragment>\n              <HeaderSection title={\"Security Context\"} />\n              <Box>\n                {poolInformation.securityContext.runAsNonRoot !== null && (\n                  <Box sx={{ ...twoColCssGridLayoutConfig }}>\n                    <LabelValuePair\n                      label={\"Run as Non Root\"}\n                      value={\n                        poolInformation.securityContext.runAsNonRoot\n                          ? \"Yes\"\n                          : \"No\"\n                      }\n                    />\n                  </Box>\n                )}\n                <Box\n                  sx={{\n                    ...twoColCssGridLayoutConfig,\n                    gridTemplateColumns: {\n                      xs: \"1fr\",\n                      sm: \"2fr 1fr\",\n                      md: \"1fr 1fr 1fr\",\n                    },\n                  }}\n                >\n                  {poolInformation.securityContext.runAsUser && (\n                    <LabelValuePair\n                      label={\"Run as User\"}\n                      value={poolInformation.securityContext.runAsUser}\n                    />\n                  )}\n                  {poolInformation.securityContext.runAsGroup && (\n                    <LabelValuePair\n                      label={\"Run as Group\"}\n                      value={poolInformation.securityContext.runAsGroup}\n                    />\n                  )}\n                  {poolInformation.securityContext.fsGroup && (\n                    <LabelValuePair\n                      label={\"FsGroup\"}\n                      value={poolInformation.securityContext.fsGroup}\n                    />\n                  )}\n                </Box>\n              </Box>\n            </Fragment>\n          )}\n        <HeaderSection title={\"Affinity\"} />\n        <Box>\n          <Box sx={{ ...twoColCssGridLayoutConfig }}>\n            <LabelValuePair label={\"Type\"} value={affinityType} />\n            {poolInformation.affinity?.nodeAffinity &&\n            poolInformation.affinity?.podAntiAffinity ? (\n              <LabelValuePair label={\"With Pod Anti affinity\"} value={\"Yes\"} />\n            ) : (\n              <span />\n            )}\n          </Box>\n          {poolInformation.affinity?.nodeAffinity && (\n            <Fragment>\n              <HeaderSection title={\"Labels\"} />\n              <ul>\n                {poolInformation.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.map(\n                  (term) => {\n                    return term.matchExpressions.map((trm) => {\n                      return (\n                        <li>\n                          {trm.key} - {trm.values.join(\", \")}\n                        </li>\n                      );\n                    });\n                  }\n                )}\n              </ul>\n            </Fragment>\n          )}\n        </Box>\n        {poolInformation.tolerations && poolInformation.tolerations.length > 0 && (\n          <Fragment>\n            <HeaderSection title={\"Tolerations\"} />\n            <Box>\n              <ul>\n                {poolInformation.tolerations.map((tolItem) => {\n                  return (\n                    <li>\n                      {tolItem.operator === \"Equal\" ? (\n                        <Fragment>\n                          If <strong>{tolItem.key}</strong> is equal to{\" \"}\n                          <strong>{tolItem.value}</strong> then{\" \"}\n                          <strong>{tolItem.effect}</strong> after{\" \"}\n                          <strong>\n                            {tolItem.tolerationSeconds?.seconds || 0}\n                          </strong>{\" \"}\n                          seconds\n                        </Fragment>\n                      ) : (\n                        <Fragment>\n                          If <strong>{tolItem.key}</strong> exists then{\" \"}\n                          <strong>{tolItem.effect}</strong> after{\" \"}\n                          <strong>\n                            {tolItem.tolerationSeconds?.seconds || 0}\n                          </strong>{\" \"}\n                          seconds\n                        </Fragment>\n                      )}\n                    </li>\n                  );\n                })}\n              </ul>\n            </Box>\n          </Fragment>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  selectedPool: state.tenants.tenantDetails.selectedPool,\n});\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n});\n\nexport default withStyles(styles)(connector(PoolDetails));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AppState } from \"../../../../store\";\nimport {\n  setOpenPoolDetails,\n  setSelectedPool,\n  setTenantDetailsLoad,\n} from \"../actions\";\nimport PoolsListing from \"./Pools/Details/PoolsListing\";\nimport PoolDetails from \"./Pools/Details/PoolDetails\";\nimport BackLink from \"../../../../common/BackLink\";\n\ninterface IPoolsSummary {\n  classes: any;\n  loadingTenant: boolean;\n  history: any;\n  match: any;\n  selectedPool: string | null;\n  poolDetailsOpen: boolean;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  setTenantDetailsLoad: typeof setTenantDetailsLoad;\n  setSelectedPool: typeof setSelectedPool;\n  setOpenPoolDetails: typeof setOpenPoolDetails;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...actionsTray,\n    ...tableStyles,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PoolsSummary = ({\n  classes,\n  history,\n  selectedPool,\n  match,\n  poolDetailsOpen,\n  setOpenPoolDetails,\n}: IPoolsSummary) => {\n  return (\n    <Fragment>\n      {poolDetailsOpen && (\n        <Grid item xs={12}>\n          <BackLink\n            executeOnClick={() => {\n              setOpenPoolDetails(false);\n            }}\n            label={\"Back to Pools list\"}\n            to={match.url}\n          />\n        </Grid>\n      )}\n      <h1 className={classes.sectionTitle}>\n        {poolDetailsOpen ? `Pool Details - ${selectedPool || \"\"}` : \"Pools\"}\n      </h1>\n      <Grid container>\n        {poolDetailsOpen ? (\n          <PoolDetails history={history} />\n        ) : (\n          <PoolsListing\n            setPoolDetailsView={() => {\n              setOpenPoolDetails(true);\n            }}\n            history={history}\n          />\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  selectedPool: state.tenants.tenantDetails.selectedPool,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  poolDetailsOpen: state.tenants.tenantDetails.poolDetailsOpen,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n  setTenantDetailsLoad,\n  setSelectedPool,\n  setOpenPoolDetails,\n});\n\nexport default withStyles(styles)(connector(PoolsSummary));\n"],"names":["label","value","orientation","stkProps","lblProps","valProps","direction","xs","sm","style","marginRight","fontWeight","connector","connect","state","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenant","tenantInfo","setErrorSnackMessage","setSelectedPool","withStyles","theme","createStyles","tenantDetailsStyles","actionsTray","tableStyles","containerForHeader","spacing","classes","history","setPoolDetailsView","useState","pools","setPools","filter","setFilter","useEffect","resPools","filteredPools","pool","name","toLowerCase","includes","listActions","type","onClick","selectedValue","Fragment","Grid","item","className","TextField","placeholder","searchField","id","onChange","event","target","InputProps","disableUnderline","startAdornment","InputAdornment","position","SearchIcon","variant","RBIconButton","tooltip","text","push","namespace","icon","color","tableBlock","TableWrapper","itemActions","columns","elementKey","isLoading","records","entityName","idField","customEmptyMessage","children","restProps","Stack","justifyContent","margin","md","stylingLayout","border","borderRadius","padding","twoColCssGridLayoutConfig","display","gridTemplateColumns","gridAutoFlow","gap","selectedPool","setTenantDetailsLoad","spacingUtils","textStyleUtils","poolInformation","find","affinityType","affinity","nodeAffinity","HeaderSection","title","sx","borderBottom","marginBottom","right","top","Box","LabelValuePair","volumes","volumes_per_server","capacity","resources","requests","cpu","niceBytesInt","memory","volume_configuration","size","storage_class_name","securityContext","runAsNonRoot","runAsUser","runAsGroup","fsGroup","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","nodeSelectorTerms","map","term","matchExpressions","trm","key","values","join","tolerations","length","tolItem","operator","effect","tolerationSeconds","seconds","poolDetailsOpen","setOpenPoolDetails","match","BackLink","executeOnClick","to","url","sectionTitle","container"],"sourceRoot":""}