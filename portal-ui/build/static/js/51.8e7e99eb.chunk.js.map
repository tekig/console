{"version":3,"file":"static/js/51.8e7e99eb.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  LinearProgress,\n  SelectChangeEvent,\n  Typography,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { LifeCycleItem } from \"../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { LifecycleConfigIcon } from \"../../../../icons\";\nimport { ITiersDropDown } from \"./AddLifecycleModal\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dateSelector: {\n      \"& div\": {\n        borderBottom: 0,\n        marginBottom: 0,\n\n        \"& div:nth-child(2)\": {\n          border: \"1px solid #EAEAEA\",\n          paddingLeft: 5,\n\n          \"& div\": {\n            border: 0,\n          },\n        },\n      },\n    },\n    formFieldRowAccordion: {\n      \"& .MuiPaper-root\": { padding: 0 },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\ninterface IAddUserContentProps {\n  classes: any;\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst EditLifecycleConfiguration = ({\n  classes,\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n  setModalErrorSnackMessage,\n}: IAddUserContentProps) => {\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString()\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString()\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\"\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\"\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\"\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\"\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(expiryDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCExpirationDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        ...rules,\n      };\n\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/buckets/${selectedBucket}/lifecycle/${lifecycleRule.id}`,\n          lifecycleUpdate\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  };\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          saveRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"id\"\n                  name=\"id\"\n                  label=\"Id\"\n                  value={lifecycleRule.id}\n                  onChange={() => {}}\n                  disabled\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormSwitchWrapper\n                  label=\"Status\"\n                  indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                  checked={enabled}\n                  value={\"user_enabled\"}\n                  id=\"rule_status\"\n                  name=\"rule_status\"\n                  onChange={(e) => {\n                    setEnabled(e.target.checked);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <RadioGroupSelector\n                  currentSelection={ilmType}\n                  id=\"rule_type\"\n                  name=\"rule_type\"\n                  label=\"Rule Type\"\n                  selectorOptions={[\n                    { value: \"expiry\", label: \"Expiry\" },\n                    { value: \"transition\", label: \"Transition\" },\n                  ]}\n                  onChange={() => {}}\n                  disableOptions\n                />\n              </Grid>\n              {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"expiry_days\"\n                    name=\"expiry_days\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setExpiryDays(e.target.value);\n                    }}\n                    label=\"Expiry Days\"\n                    value={expiryDays}\n                    min=\"0\"\n                  />\n                </Grid>\n              )}\n\n              {ilmType === \"expiry\" &&\n                lifecycleRule.expiration?.noncurrent_expiration_days && (\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"noncurrentversion_expiration_days\"\n                      name=\"noncurrentversion_expiration_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setNCExpirationDays(e.target.value);\n                      }}\n                      label=\"Non-current Expiration Days\"\n                      value={NCExpirationDays}\n                      min=\"0\"\n                    />\n                  </Grid>\n                )}\n              {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n                <Fragment>\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"transition_days\"\n                      name=\"transition_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setTransitionDays(e.target.value);\n                      }}\n                      label=\"Transition Days\"\n                      value={transitionDays}\n                      min=\"0\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <SelectWrapper\n                      label=\"Storage Class\"\n                      id=\"storage_class\"\n                      name=\"storage_class\"\n                      value={storageClass}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        setStorageClass(e.target.value as string);\n                      }}\n                      options={tiersList}\n                    />\n                  </Grid>\n                </Fragment>\n              )}\n\n              {ilmType === \"transition\" &&\n                lifecycleRule.transition?.noncurrent_transition_days && (\n                  <Fragment>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"noncurrentversion_transition_days\"\n                        name=\"noncurrentversion_transition_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionDays(e.target.value);\n                        }}\n                        label=\"Non-current Transition Days\"\n                        value={NCTransitionDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        id=\"noncurrentversion_t_SC\"\n                        name=\"noncurrentversion_t_SC\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionSC(e.target.value);\n                        }}\n                        placeholder=\"Set Non-current Version Transition Storage Class\"\n                        label=\"Non-current Version Transition Storage Class\"\n                        value={NCTransitionSC}\n                      />\n                    </Grid>\n                  </Fragment>\n                )}\n              <Grid item xs={12} className={classes.formFieldRowAccordion}>\n                <Accordion>\n                  <AccordionSummary>\n                    <Typography>Filters</Typography>\n                  </AccordionSummary>\n\n                  <AccordionDetails>\n                    <Grid item xs={12}>\n                      <InputBoxWrapper\n                        id=\"prefix\"\n                        name=\"prefix\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setPrefix(e.target.value);\n                        }}\n                        label=\"Prefix\"\n                        value={prefix}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <QueryMultiSelector\n                        name=\"tags\"\n                        label=\"Tags\"\n                        elements={tags}\n                        onChange={(vl: string) => {\n                          setTags(vl);\n                        }}\n                        keyPlaceholder=\"Tag Key\"\n                        valuePlaceholder=\"Tag Value\"\n                        withBorder\n                      />\n                    </Grid>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n              {ilmType === \"expiry\" &&\n                lifecycleRule.expiration?.noncurrent_expiration_days && (\n                  <Grid item xs={12} className={classes.formFieldRowAccordion}>\n                    <Accordion>\n                      <AccordionSummary>\n                        <Typography>Advanced</Typography>\n                      </AccordionSummary>\n\n                      <AccordionDetails>\n                        <Grid item xs={12}>\n                          <FormSwitchWrapper\n                            value=\"expired_delete_marker\"\n                            id=\"expired_delete_marker\"\n                            name=\"expired_delete_marker\"\n                            checked={expiredObjectDM}\n                            onChange={(\n                              event: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setExpiredObjectDM(event.target.checked);\n                            }}\n                            label={\"Expired Object Delete Marker\"}\n                          />\n                        </Grid>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Grid>\n                )}\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading || !isFormValid}\n            >\n              Save\n            </Button>\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(EditLifecycleConfiguration));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  LinearProgress,\n  SelectChangeEvent,\n  Typography,\n} from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { LifecycleConfigIcon } from \"../../../../icons\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { BucketVersioning } from \"../types\";\nimport { AppState } from \"../../../../store\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  classes: any;\n  bucketName: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  distributedSetup: boolean;\n}\n\nexport interface ITiersDropDown {\n  label: string;\n  value: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dateSelector: {\n      \"& div\": {\n        borderBottom: 0,\n        marginBottom: 0,\n\n        \"& div:nth-child(2)\": {\n          border: \"1px solid #EAEAEA\",\n          paddingLeft: 5,\n\n          \"& div\": {\n            border: 0,\n          },\n        },\n      },\n    },\n    formFieldRowFilter: {\n      \"& .MuiPaper-root\": { padding: 0 },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n  setModalErrorSnackMessage,\n  distributedSetup,\n}: IReplicationModal) => {\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [isVersioned, setIsVersioned] = useState<boolean>(false);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\"\n  );\n\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api\n        .invoke(\"GET\", `/api/v1/buckets/${bucketName}/versioning`)\n        .then((res: BucketVersioning) => {\n          setIsVersioned(res.is_versioned);\n          setLoadingVersioning(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setModalErrorSnackMessage(err);\n          setLoadingVersioning(false);\n        });\n    }\n  }, [\n    loadingVersioning,\n    setModalErrorSnackMessage,\n    bucketName,\n    distributedSetup,\n  ]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/buckets/${bucketName}/lifecycle`,\n        lifecycleInsert\n      )\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container className={classes.loadingBox}>\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.formScrollable}>\n              <Grid item xs={12}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12}>\n                    <RadioGroupSelector\n                      currentSelection={ilmType}\n                      id=\"ilm_type\"\n                      name=\"ilm_type\"\n                      label=\"Type of lifecycle\"\n                      onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                        setIlmType(e.target.value as string);\n                      }}\n                      selectorOptions={[\n                        { value: \"expiry\", label: \"Expiry\" },\n                        { value: \"transition\", label: \"Transition\" },\n                      ]}\n                    />\n                  </Grid>\n                  {isVersioned && (\n                    <Grid item xs={12}>\n                      <SelectWrapper\n                        value={targetVersion}\n                        id=\"object_version\"\n                        name=\"object_version\"\n                        label=\"Object Version\"\n                        onChange={(e) => {\n                          setTargetVersion(\n                            e.target.value as \"current\" | \"noncurrent\"\n                          );\n                        }}\n                        options={[\n                          { value: \"current\", label: \"Current Version\" },\n                          { value: \"noncurrent\", label: \"Non-Current Version\" },\n                        ]}\n                      />\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      id=\"expiry_days\"\n                      name=\"expiry_days\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setLifecycleDays(e.target.value);\n                        }\n                      }}\n                      pattern={\"[0-9]*\"}\n                      label=\"After\"\n                      value={lifecycleDays}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"expire-current-unit\"}\n                          unitSelected={\"days\"}\n                          unitsList={[{ label: \"Days\", value: \"days\" }]}\n                          disabled={true}\n                        />\n                      }\n                    />\n                  </Grid>\n\n                  {ilmType === \"expiry\" ? (\n                    <Fragment></Fragment>\n                  ) : (\n                    <Fragment>\n                      <Grid item xs={12}>\n                        <SelectWrapper\n                          label=\"To Tier\"\n                          id=\"storage_class\"\n                          name=\"storage_class\"\n                          value={storageClass}\n                          onChange={(e: SelectChangeEvent<string>) => {\n                            setStorageClass(e.target.value as string);\n                          }}\n                          options={tiersList}\n                        />\n                      </Grid>\n                    </Fragment>\n                  )}\n                  <Grid item xs={12} className={classes.formFieldRowFilter}>\n                    <Accordion>\n                      <AccordionSummary>\n                        <Typography>Filters</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Grid item xs={12}>\n                          <InputBoxWrapper\n                            id=\"prefix\"\n                            name=\"prefix\"\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setPrefix(e.target.value);\n                            }}\n                            label=\"Prefix\"\n                            value={prefix}\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <QueryMultiSelector\n                            name=\"tags\"\n                            label=\"Tags\"\n                            elements={\"\"}\n                            onChange={(vl: string) => {\n                              setTags(vl);\n                            }}\n                            keyPlaceholder=\"Tag Key\"\n                            valuePlaceholder=\"Tag Value\"\n                            withBorder\n                          />\n                        </Grid>\n                      </AccordionDetails>\n                    </Accordion>\n                  </Grid>\n                  {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n                    <Grid item xs={12} className={classes.formFieldRowFilter}>\n                      <Accordion>\n                        <AccordionSummary>\n                          <Typography>Advanced</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <Grid item xs={12}>\n                            <FormSwitchWrapper\n                              value=\"expired_delete_marker\"\n                              id=\"expired_delete_marker\"\n                              name=\"expired_delete_marker\"\n                              checked={expiredObjectDM}\n                              onChange={(\n                                event: React.ChangeEvent<HTMLInputElement>\n                              ) => {\n                                setExpiredObjectDM(event.target.checked);\n                              }}\n                              label={\"Expire Delete Marker\"}\n                              description={\n                                \"Remove the reference to the object if no versions are left\"\n                              }\n                            />\n                          </Grid>\n                        </AccordionDetails>\n                      </Accordion>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n              >\n                Save\n              </Button>\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  distributedSetup: state.system.distributedSetup,\n});\n\nconst connector = connect(mapState, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(AddLifecycleModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport api from \"../../../../common/api\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n  });\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n  setErrorSnackMessage,\n}: IDeleteLifecycleRule) => {\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api\n        .invoke(\"DELETE\", `/api/v1/buckets/${bucket}/lifecycle/${id}`)\n        .then((res) => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setDeletingRule(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, setErrorSnackMessage]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(DeleteBucketLifecycleRule));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { BucketInfo, LifeCycleItem } from \"../types\";\nimport { AddIcon, TiersIcon } from \"../../../../icons\";\nimport {\n  actionsTray,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AppState } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport RBIconButton from \"./SummaryItems/RBIconButton\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    twHeight: {\n      minHeight: 400,\n    },\n  });\n\ninterface IBucketLifecyclePanelProps {\n  classes: any;\n  match: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  loadingBucket: boolean;\n  bucketInfo: BucketInfo | null;\n}\n\nconst BucketLifecyclePanel = ({\n  classes,\n  match,\n  setErrorSnackMessage,\n  loadingBucket,\n  bucketInfo,\n}: IBucketLifecyclePanelProps) => {\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<LifeCycleItem[]>([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n\n  const bucketName = match.params[\"bucketName\"];\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api\n          .invoke(\"GET\", `/api/v1/buckets/${bucketName}/lifecycle`)\n          .then((res: any) => {\n            const records = get(res, \"lifecycle\", []);\n\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            console.error(err);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 || el.expiration.noncurrent_expiration_days)\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <PanelTitle>Lifecycle Rules</PanelTitle>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.ADMIN_LIST_TIERS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <RBIconButton\n              tooltip={\"Add Lifecycle Rule\"}\n              onClick={() => {\n                setAddLifecycleOpen(true);\n              }}\n              text={\"Add Lifecycle Rule\"}\n              icon={<AddIcon />}\n              color=\"primary\"\n              variant={\"contained\"}\n            />\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <TableWrapper\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={classes.twHeight}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://docs.min.io/minio/baremetal/lifecycle-management/lifecycle-management-overview.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  session: state.console.session,\n  loadingBucket: state.buckets.bucketDetails.loadingBucket,\n  bucketInfo: state.buckets.bucketDetails.bucketInfo,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(BucketLifecyclePanel));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    lineInputBoxes: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    queryDiv: {\n      alignSelf: \"center\",\n      margin: \"0 4px\",\n      fontWeight: 600,\n    },\n  });\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={classes.lineInputBoxes}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={classes.queryDiv}>:</span>\n        <InputBoxWrapper\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <HelpIcon className={classes.tooltip} />\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(QueryMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","mapDispatchToProps","setModalErrorSnackMessage","connector","connect","dateSelector","borderBottom","formFieldRowAccordion","padding","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","closeModalAndRefresh","selectedBucket","lifecycleRule","open","useState","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","useEffect","api","then","res","get","length","objList","map","tier","tierType","type","value","label","catch","err","valid","status","transitionMode","transition","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","storage_class","noncurrent_storage_class","delete_marker","tgs","reduce","stringLab","currItem","index","key","ModalWrapper","onClose","modalOpen","titleIcon","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","expiry","parseInt","lifecycleUpdate","disable","expired_object_delete_marker","id","saveRecord","Grid","formScrollable","spacing","InputBoxWrapper","name","onChange","disabled","FormSwitchWrapper","indicatorLabels","checked","target","RadioGroupSelector","currentSelection","selectorOptions","disableOptions","min","Fragment","SelectWrapper","options","placeholder","Accordion","AccordionSummary","Typography","AccordionDetails","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","modalButtonBar","Button","variant","color","onClick","LinearProgress","state","distributedSetup","system","formFieldRowFilter","bucketName","isVersioned","setIsVersioned","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","is_versioned","loadingBox","lifecycleInsert","addRecord","validity","pattern","overlayObject","InputUnitMenu","unitSelected","unitsList","description","setErrorSnackMessage","modalBasic","onCloseAndRefresh","deleteOpen","bucket","deletingRule","setDeletingRule","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","confirmationContent","DialogContentText","session","console","loadingBucket","buckets","bucketDetails","bucketInfo","searchField","actionsTray","twHeight","minHeight","match","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","params","displayLifeCycleRules","hasPermission","IAM_SCOPES","records","error","lifecycleColumns","renderFullObject","renderFunction","el","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","refresh","PanelTitle","SecureComponent","scopes","resource","matchAll","errorProps","RBIconButton","tooltip","text","icon","TableWrapper","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","href","rel","fieldBasic","tooltipHelper","inputWithBorder","overflowY","position","marginTop","lineInputBoxes","queryDiv","alignSelf","margin","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","fieldContainer","inputLabel","tooltipContainer","placement","ref","modalSnackMessage","modalSnackBar","setModalSnackMessage","deleteDialogStyles","content","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","reason","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration"],"sourceRoot":""}