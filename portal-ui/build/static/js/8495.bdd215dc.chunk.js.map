{"version":3,"file":"static/js/8495.bdd215dc.chunk.js","mappings":"oQAqGMA,GAAYC,EAAAA,EAAAA,KAvBD,SAACC,GAAD,MAAsB,CACrCC,cAAeD,EAAME,QAAQC,cAAcF,cAC3CG,eAAgBJ,EAAME,QAAQC,cAAcE,cAC5CC,OAAQN,EAAME,QAAQC,cAAcI,WACpCC,WAAYC,GAAAA,CAAIT,EAAME,QAAQC,cAAcI,WAAY,cAAc,GACtEG,kBAAmBD,GAAAA,CACjBT,EAAME,QAAQC,cAAcI,WAC5B,qBACA,GAEFI,kBAAmBF,GAAAA,CACjBT,EAAME,QAAQC,cAAcI,WAC5B,qBACA,GAEFK,UAAWH,GAAAA,CAAIT,EAAME,QAAQC,cAAcI,WAAY,gBAAgB,GACvEM,YAAaJ,GAAAA,CACXT,EAAME,QAAQC,cAAcI,WAC5B,kBACA,MAIgC,CAClCO,qBAAAA,EAAAA,KAGF,WAAeC,EAAAA,EAAAA,IAjEA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kBACRC,EAAAA,IADO,IAEVC,YAAa,CACXC,OAAQ,MACRC,KAAM,WACNC,UAAW,QACXC,MAAO,UAENC,EAAAA,EAAAA,IAAmBR,EAAMS,QAAQ,QAwDxC,CAAkC3B,GArDZ,SAAC,GAAwC,IAAtC4B,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,MAC1BC,EAAaD,EAAME,OAAN,WACbC,EAAkBH,EAAME,OAAN,gBAExB,GAA8BE,EAAAA,EAAAA,WAAkB,GAAhD,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,UAAC,WAAD,YACE,eAAIC,UAAWR,EAAQS,aAAvB,qBACCH,IACC,gBAAKI,MAAO,CAAEC,UAAW,QAAzB,UACE,SAAC,IAAD,OAGJ,mBACEH,UAAWR,EAAQP,YACnBmB,MAAO,UACPC,IAAG,qBAAgBT,EAAhB,YAAmCF,GAAnC,OAAgDY,EAAAA,GAAAA,UAAhD,SACHC,OAAQ,WACNR,GAAW","sources":["screens/Console/Tenants/TenantDetails/TenantMetrics.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ITenant } from \"../ListTenants/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AppState } from \"../../../../store\";\nimport { LinearProgress } from \"@mui/material\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\n\ninterface ITenantMetrics {\n  classes: any;\n  match: any;\n  tenant: ITenant | null;\n\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    iframeStyle: {\n      border: \"0px\",\n      flex: \"1 1 auto\",\n      minHeight: \"800px\",\n      width: \"100%\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantMetrics = ({ classes, match }: ITenantMetrics) => {\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  const [loading, setLoading] = useState<boolean>(true);\n\n  return (\n    <React.Fragment>\n      <h1 className={classes.sectionTitle}>Metrics</h1>\n      {loading && (\n        <div style={{ marginTop: \"80px\" }}>\n          <LinearProgress />\n        </div>\n      )}\n      <iframe\n        className={classes.iframeStyle}\n        title={\"metrics\"}\n        src={`/api/proxy/${tenantNamespace}/${tenantName}${IAM_PAGES.DASHBOARD}?cp=y`}\n        onLoad={() => {\n          setLoading(false);\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  logEnabled: get(state.tenants.tenantDetails.tenantInfo, \"logEnabled\", false),\n  monitoringEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"monitoringEnabled\",\n    false\n  ),\n  encryptionEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"encryptionEnabled\",\n    false\n  ),\n  adEnabled: get(state.tenants.tenantDetails.tenantInfo, \"idpAdEnabled\", false),\n  oidcEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"idpOidcEnabled\",\n    false\n  ),\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(TenantMetrics));\n"],"names":["connector","connect","state","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenant","tenantInfo","logEnabled","get","monitoringEnabled","encryptionEnabled","adEnabled","oidcEnabled","setErrorSnackMessage","withStyles","theme","createStyles","tenantDetailsStyles","iframeStyle","border","flex","minHeight","width","containerForHeader","spacing","classes","match","tenantName","params","tenantNamespace","useState","loading","setLoading","className","sectionTitle","style","marginTop","title","src","IAM_PAGES","onLoad"],"sourceRoot":""}