{"version":3,"file":"static/js/7045.7a56a854.chunk.js","mappings":"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","sources":["screens/Console/NotificationEndpoints/NotificationTypeSelector.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { servicesList } from \"./utils\";\nimport {\n  settingsCommon,\n  typesSelection,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport history from \"../../../history\";\nimport BackLink from \"../../../common/BackLink\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\ninterface INotificationTypeSelector {\n  classes: any;\n}\n\nconst withLogos = servicesList.filter((elService) => elService.logo !== \"\");\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...settingsCommon,\n    ...typesSelection,\n  });\n\nconst NotificationTypeSelector = ({ classes }: INotificationTypeSelector) => {\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <Fragment>\n            <BackLink\n              to={IAM_PAGES.NOTIFICATIONS_ENDPOINTS}\n              label=\"Notification Targets\"\n            />\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n      <PageLayout>\n        <div className={classes.iconContainer}>\n          {withLogos.map((item) => {\n            return (\n              <button\n                key={`icon-${item.targetTitle}`}\n                className={classes.lambdaNotif}\n                onClick={() => {\n                  history.push(\n                    `${IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD}/${item.actionTrigger}`\n                  );\n                }}\n              >\n                <div className={classes.lambdaNotifIcon}>\n                  <img\n                    src={item.logo}\n                    className={classes.logoButton}\n                    alt={item.targetTitle}\n                  />\n                </div>\n\n                <div className={classes.lambdaNotifTitle}>\n                  <b>{item.targetTitle}</b>\n                </div>\n              </button>\n            );\n          })}\n        </div>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NotificationTypeSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue-dir\",\n    label: \"Queue Directory\",\n    required: true,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue-limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n"],"names":["withLogos","servicesList","elService","logo","withStyles","theme","createStyles","settingsCommon","typesSelection","classes","Fragment","label","to","IAM_PAGES","actions","className","iconContainer","map","item","lambdaNotif","onClick","history","actionTrigger","lambdaNotifIcon","src","logoButton","alt","targetTitle","lambdaNotifTitle","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","element","service_name","service","account_id","status","commonFields","name","required","tooltip","type","placeholder","removeEmptyFields","formFields","filter","field","value","notificationEndpointsFields"],"sourceRoot":""}