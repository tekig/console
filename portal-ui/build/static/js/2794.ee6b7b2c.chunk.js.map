{"version":3,"file":"static/js/2794.ee6b7b2c.chunk.js","mappings":"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","sources":["screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/Tenants/TenantDetails/UpdateTenantModal.tsx","screens/Console/Common/UsageBarWrapper/SummaryUsageBar.tsx","screens/Console/Tenants/TenantDetails/TenantSummary.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/material/Stack/Stack.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, Grid } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../common/api\";\n\ninterface IUpdateTenantModal {\n  open: boolean;\n  closeModalAndRefresh: (update: boolean) => any;\n  namespace: string;\n  idTenant: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    infoText: {\n      fontSize: 14,\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\nconst UpdateTenantModal = ({\n  open,\n  closeModalAndRefresh,\n  namespace,\n  idTenant,\n  setModalErrorSnackMessage,\n  classes,\n}: IUpdateTenantModal) => {\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [minioImage, setMinioImage] = useState<string>(\"\");\n  const [imageRegistry, setImageRegistry] = useState<boolean>(false);\n  const [imageRegistryEndpoint, setImageRegistryEndpoint] =\n    useState<string>(\"\");\n  const [imageRegistryUsername, setImageRegistryUsername] =\n    useState<string>(\"\");\n  const [imageRegistryPassword, setImageRegistryPassword] =\n    useState<string>(\"\");\n  const [validMinioImage, setValidMinioImage] = useState<boolean>(true);\n\n  const validateImage = useCallback(\n    (fieldToCheck: string) => {\n      const pattern = new RegExp(\"^$|^((.*?)/(.*?):(.+))$\");\n\n      switch (fieldToCheck) {\n        case \"minioImage\":\n          setValidMinioImage(pattern.test(minioImage));\n          break;\n      }\n    },\n    [minioImage]\n  );\n\n  useEffect(() => {\n    validateImage(\"minioImage\");\n  }, [minioImage, validateImage]);\n\n  const closeAction = () => {\n    closeModalAndRefresh(false);\n  };\n\n  const resetForm = () => {\n    setMinioImage(\"\");\n    setImageRegistry(false);\n    setImageRegistryEndpoint(\"\");\n    setImageRegistryUsername(\"\");\n    setImageRegistryPassword(\"\");\n  };\n\n  const updateMinIOImage = () => {\n    setIsSending(true);\n\n    let payload = {\n      image: minioImage,\n      enable_prometheus: true,\n    };\n\n    if (imageRegistry) {\n      const registry: any = {\n        image_registry: {\n          registry: imageRegistryEndpoint,\n          username: imageRegistryUsername,\n          password: imageRegistryPassword,\n        },\n      };\n      payload = {\n        ...payload,\n        ...registry,\n      };\n    }\n\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${namespace}/tenants/${idTenant}`,\n        payload\n      )\n      .then(() => {\n        setIsSending(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((error: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(error);\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      title={\"Update MinIO Version\"}\n      modalOpen={open}\n      onClose={closeAction}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.modalFormScrollable}>\n          <div className={classes.infoText}>\n            Please enter the MinIO image from dockerhub to use. If blank, then\n            latest build will be used.\n          </div>\n          <br />\n          <br />\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              value={minioImage}\n              label={\"MinIO's Image\"}\n              id={\"minioImage\"}\n              name={\"minioImage\"}\n              placeholder={\"E.g. minio/minio:RELEASE.2022-02-26T02-54-46Z\"}\n              onChange={(e) => {\n                setMinioImage(e.target.value);\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"imageRegistry\"\n              id=\"setImageRegistry\"\n              name=\"setImageRegistry\"\n              checked={imageRegistry}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setImageRegistry(!imageRegistry);\n              }}\n              label={\"Set Custom Image Registry\"}\n              indicatorLabels={[\"Yes\", \"No\"]}\n            />\n          </Grid>\n          {imageRegistry && (\n            <Fragment>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryEndpoint}\n                  label={\"Endpoint\"}\n                  id={\"imageRegistry\"}\n                  name={\"imageRegistry\"}\n                  placeholder={\"E.g. https://index.docker.io/v1/\"}\n                  onChange={(e) => {\n                    setImageRegistryEndpoint(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryUsername}\n                  label={\"Username\"}\n                  id={\"imageRegistryUsername\"}\n                  name={\"imageRegistryUsername\"}\n                  placeholder={\"Enter image registry username\"}\n                  onChange={(e) => {\n                    setImageRegistryUsername(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  value={imageRegistryPassword}\n                  label={\"Password\"}\n                  id={\"imageRegistryPassword\"}\n                  name={\"imageRegistryPassword\"}\n                  placeholder={\"Enter image registry password\"}\n                  onChange={(e) => {\n                    setImageRegistryPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Fragment>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.modalButtonBar}>\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={resetForm}\n          >\n            Clear\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={\n              !validMinioImage ||\n              (imageRegistry &&\n                (imageRegistryEndpoint.trim() === \"\" ||\n                  imageRegistryUsername.trim() === \"\" ||\n                  imageRegistryPassword.trim() === \"\")) ||\n              isSending\n            }\n            onClick={updateMinIOImage}\n          >\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(UpdateTenantModal));\n","import React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress, Stack } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport ErrorBlock from \"../../../shared/ErrorBlock\";\nimport { CircleIcon } from \"../../../../icons\";\nimport LabelValuePair from \"./LabelValuePair\";\nimport { ValueUnit } from \"../../Tenants/ListTenants/types\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport Loader from \"../Loader/Loader\";\n\ninterface ISummaryUsageBar {\n  maxValue: number | undefined;\n  currValue: number | undefined;\n  label: string;\n  error: string;\n  loading: boolean;\n  classes: any;\n  labels?: boolean;\n  healthStatus?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    allValue: {\n      fontSize: 16,\n      fontWeight: 700,\n      marginBottom: 8,\n    },\n    currentUsage: {\n      fontSize: 12,\n      marginTop: 8,\n    },\n    centerItem: {\n      textAlign: \"center\",\n    },\n  });\n\nexport const BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#F4F4F4\",\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#081C42\",\n  },\n  padChart: {\n    padding: \"5px\",\n  },\n}))(LinearProgress);\n\nconst SummaryUsageBar = ({\n  classes,\n  maxValue,\n  currValue,\n  healthStatus,\n  loading,\n  error,\n}: ISummaryUsageBar) => {\n  var capacity: ValueUnit = { value: \"n/a\", unit: \"\" };\n  var used: ValueUnit = { value: \"n/a\", unit: \"\" };\n\n  if (maxValue) {\n    const b = niceBytes(`${maxValue}`, true);\n    const parts = b.split(\" \");\n    capacity.value = parts[0];\n    capacity.unit = parts[1];\n  }\n  if (currValue) {\n    const b = niceBytes(`${currValue}`, true);\n    const parts = b.split(\" \");\n    used.value = parts[0];\n    used.unit = parts[1];\n  }\n\n  let percentagelValue = 0;\n  if (currValue && maxValue) {\n    percentagelValue = (currValue * 100) / maxValue;\n  }\n\n  const renderComponent = () => {\n    if (!loading) {\n      return error !== \"\" ? (\n        <ErrorBlock errorMessage={error} withBreak={false} />\n      ) : (\n        <Grid item xs={12}>\n          <BorderLinearProgress\n            variant=\"determinate\"\n            value={percentagelValue}\n          />\n          <Stack\n            direction={{ xs: \"column\", sm: \"row\" }}\n            spacing={{ xs: 1, sm: 2, md: 4 }}\n            alignItems={\"stretch\"}\n            margin={\"15px 0 15px 0\"}\n          >\n            <LabelValuePair\n              label={\"Storage Capacity:\"}\n              orientation={\"row\"}\n              value={`${capacity.value} ${capacity.unit}`}\n            />\n            <LabelValuePair\n              label={\"Used:\"}\n              orientation={\"row\"}\n              value={`${used.value} ${used.unit}`}\n            />\n            {healthStatus && (\n              <LabelValuePair\n                orientation={\"row\"}\n                label={\"Health:\"}\n                value={\n                  <span className={healthStatus}>\n                    <CircleIcon />\n                  </span>\n                }\n              />\n            )}\n          </Stack>\n        </Grid>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className={classes.padChart}>\n          <Grid item xs={12} className={classes.centerItem}>\n            <Loader style={{ width: 40, height: 40 }} />\n          </Grid>\n        </div>\n      )}\n      {renderComponent()}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SummaryUsageBar);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Box, Grid } from \"@mui/material\";\nimport { ITenant } from \"../ListTenants/types\";\nimport UpdateTenantModal from \"./UpdateTenantModal\";\nimport { AppState } from \"../../../../store\";\nimport AButton from \"../../Common/AButton/AButton\";\nimport SummaryUsageBar from \"../../Common/UsageBarWrapper/SummaryUsageBar\";\nimport LabelValuePair from \"../../Common/UsageBarWrapper/LabelValuePair\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport SectionTitle from \"../../Common/SectionTitle\";\n\ninterface ITenantsSummary {\n  classes: any;\n  match: any;\n  tenant: ITenant | null;\n  logEnabled: boolean;\n  monitoringEnabled: boolean;\n  encryptionEnabled: boolean;\n  minioTLS: boolean;\n  consoleTLS: boolean;\n  consoleEnabled: boolean;\n  adEnabled: boolean;\n  oidcEnabled: boolean;\n  loadingTenant: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    redState: {\n      color: theme.palette.error.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    yellowState: {\n      color: theme.palette.warning.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    greenState: {\n      color: theme.palette.success.main,\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    greyState: {\n      color: \"grey\",\n      \"& .min-icon\": {\n        width: 16,\n        height: 16,\n        marginRight: 4,\n      },\n    },\n    centerAlign: {\n      textAlign: \"center\",\n    },\n    detailSection: {\n      \"& div\": {\n        \"& b,i\": {\n          minWidth: 80,\n          display: \"block\",\n          float: \"left\",\n        },\n        \"& i\": {\n          fontStyle: \"normal\",\n          wordWrap: \"break-word\",\n          overflowWrap: \"break-word\",\n        },\n        \"& div\": {\n          clear: \"both\",\n        },\n        clear: \"both\",\n        marginBottom: 2,\n      },\n    },\n    linkedSection: {\n      color: theme.palette.info.main,\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst healthStatusToClass = (health_status: string = \"red\", classes: any) => {\n  return health_status === \"red\"\n    ? classes.redState\n    : health_status === \"yellow\"\n    ? classes.yellowState\n    : health_status === \"green\"\n    ? classes.greenState\n    : classes.greyState;\n};\n\nconst StorageSummary = ({ tenant, classes }: Partial<ITenantsSummary>) => {\n  return (\n    <SummaryUsageBar\n      currValue={tenant?.status?.usage?.raw_usage}\n      maxValue={tenant?.status?.usage?.raw}\n      label={\"Storage\"}\n      error={\"\"}\n      loading={false}\n      healthStatus={healthStatusToClass(tenant?.status?.health_status, classes)}\n    />\n  );\n};\n\nconst getToggle = (toggleValue: boolean, idPrefix = \"\") => {\n  return (\n    <FormSwitchWrapper\n      indicatorLabels={[\"Enabled\", \"Disabled\"]}\n      checked={toggleValue}\n      value={toggleValue}\n      id={`${idPrefix}-status`}\n      name={`${idPrefix}-status`}\n      onChange={() => {}}\n      switchOnly\n    />\n  );\n};\n\nconst featureRowStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginTop: \"10px\",\n  \"@media (max-width: 600px)\": {\n    flexFlow: \"column\",\n  },\n};\n\nconst featureItemStyleProps = {\n  stkProps: {\n    sx: {\n      flex: 1,\n      marginRight: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      \"@media (max-width: 900px)\": {\n        marginRight: \"25px\",\n      },\n    },\n  },\n  lblProps: {\n    style: {\n      minWidth: 100,\n    },\n  },\n};\nconst TenantSummary = ({\n  classes,\n  match,\n  tenant,\n  logEnabled,\n  monitoringEnabled,\n  encryptionEnabled,\n  minioTLS,\n  consoleTLS,\n  consoleEnabled,\n  adEnabled,\n  oidcEnabled,\n  loadingTenant,\n}: ITenantsSummary) => {\n  const [poolCount, setPoolCount] = useState<number>(0);\n  const [instances, setInstances] = useState<number>(0);\n  const [volumes, setVolumes] = useState<number>(0);\n  const [updateMinioVersion, setUpdateMinioVersion] = useState<boolean>(false);\n\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  useEffect(() => {\n    if (tenant) {\n      setPoolCount(tenant.pools.length);\n      setVolumes(tenant.total_volumes || 0);\n      setInstances(tenant.total_instances || 0);\n    }\n  }, [tenant]);\n\n  return (\n    <Fragment>\n      {updateMinioVersion && (\n        <UpdateTenantModal\n          open={updateMinioVersion}\n          closeModalAndRefresh={() => {\n            setUpdateMinioVersion(false);\n          }}\n          idTenant={tenantName}\n          namespace={tenantNamespace}\n        />\n      )}\n\n      <SectionTitle separator={false}>Details</SectionTitle>\n\n      <StorageSummary tenant={tenant} classes={classes} />\n\n      <Grid container>\n        <Grid item xs={12} sm={12} md={8}>\n          <Grid item xs={12}>\n            <LabelValuePair label={\"State:\"} value={tenant?.currentState} />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label=\"MinIO:\"\n              value={\n                <AButton\n                  style={{\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"normal\",\n                    wordBreak: \"break-all\",\n                  }}\n                  onClick={() => {\n                    setUpdateMinioVersion(true);\n                  }}\n                >\n                  {tenant ? tenant.image : \"\"}\n                </AButton>\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Endpoint:\"}\n              value={\n                <a\n                  href={tenant?.endpoints?.minio}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.linkedSection}\n                >\n                  {tenant?.endpoints?.minio || \"-\"}\n                </a>\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Console:\"}\n              value={\n                <a\n                  href={tenant?.endpoints?.console}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.linkedSection}\n                >\n                  {tenant?.endpoints?.console || \"-\"}\n                </a>\n              }\n            />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={12} md={4}>\n          <Grid item xs={12}>\n            <LabelValuePair label={\"Instances:\"} value={instances} />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Clusters:\"}\n              value={poolCount}\n              stkProps={{\n                style: {\n                  marginRight: 47,\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label=\"Total Drives:\"\n              value={volumes}\n              stkProps={{\n                style: {\n                  marginRight: 43,\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Write Quorum:\"}\n              value={\n                tenant?.status?.write_quorum ? tenant?.status?.write_quorum : 0\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Drives Online:\"}\n              value={\n                tenant?.status?.drives_online\n                  ? tenant?.status?.drives_online\n                  : 0\n              }\n              stkProps={{\n                style: {\n                  marginRight: 8,\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <LabelValuePair\n              label={\"Drives Offline:\"}\n              value={\n                tenant?.status?.drives_offline\n                  ? tenant?.status?.drives_offline\n                  : 0\n              }\n              stkProps={{\n                style: {\n                  marginRight: 7,\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <SectionTitle>Features</SectionTitle>\n      <Box sx={{ ...featureRowStyle }}>\n        <LabelValuePair\n          orientation=\"row\"\n          label=\"Logs:\"\n          value={getToggle(logEnabled, \"tenant-log\")}\n          {...featureItemStyleProps}\n        />\n\n        <LabelValuePair\n          orientation=\"row\"\n          label={\"AD/LDAP:\"}\n          value={getToggle(adEnabled, \"tenant-sts\")}\n          {...featureItemStyleProps}\n        />\n        <LabelValuePair\n          orientation=\"row\"\n          label={\"Encryption:\"}\n          value={getToggle(encryptionEnabled, \"tenant-enc\")}\n          {...featureItemStyleProps}\n        />\n      </Box>\n      <Box sx={{ ...featureRowStyle }}>\n        <LabelValuePair\n          orientation=\"row\"\n          label=\"MinIO TLS:\"\n          value={getToggle(minioTLS, \"tenant-tls\")}\n          {...featureItemStyleProps}\n        />\n\n        <LabelValuePair\n          orientation=\"row\"\n          label={\"Monitoring:\"}\n          value={getToggle(monitoringEnabled, \"tenant-monitor\")}\n          {...featureItemStyleProps}\n        />\n        <LabelValuePair\n          orientation=\"row\"\n          label={\"OpenID:\"}\n          value={getToggle(oidcEnabled, \"tenant-oidc\")}\n          {...featureItemStyleProps}\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  logEnabled: get(state.tenants.tenantDetails.tenantInfo, \"logEnabled\", false),\n  monitoringEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"monitoringEnabled\",\n    false\n  ),\n  encryptionEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"encryptionEnabled\",\n    false\n  ),\n  minioTLS: get(state.tenants.tenantDetails.tenantInfo, \"minioTLS\", false),\n  consoleTLS: get(state.tenants.tenantDetails.tenantInfo, \"consoleTLS\", false),\n  consoleEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"consoleEnabled\",\n    false\n  ),\n  adEnabled: get(state.tenants.tenantDetails.tenantInfo, \"idpAdEnabled\", false),\n  oidcEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"idpOidcEnabled\",\n    false\n  ),\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(TenantSummary));\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;"],"names":["withStyles","theme","createStyles","root","padding","margin","border","backgroundColor","textDecoration","cursor","fontSize","color","palette","info","main","fontFamily","classes","children","rest","className","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","onClose","modalOpen","title","wideLimit","noContentPadding","titleIcon","useState","openSnackbar","setOpenSnackbar","useEffect","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","titleText","closeContainer","id","closeButton","onClick","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","label","value","orientation","stkProps","lblProps","valProps","direction","xs","sm","style","marginRight","fontWeight","setModalErrorSnackMessage","buttonContainer","textAlign","infoText","formFieldStyles","modalStyleUtils","closeModalAndRefresh","namespace","idTenant","isSending","setIsSending","minioImage","setMinioImage","imageRegistry","setImageRegistry","imageRegistryEndpoint","setImageRegistryEndpoint","imageRegistryUsername","setImageRegistryUsername","imageRegistryPassword","setImageRegistryPassword","validMinioImage","setValidMinioImage","validateImage","useCallback","fieldToCheck","pattern","RegExp","test","ModalWrapper","Grid","container","item","modalFormScrollable","formFieldRow","InputBoxWrapper","name","placeholder","onChange","e","target","FormSwitchWrapper","checked","indicatorLabels","Fragment","modalButtonBar","Button","variant","disabled","trim","payload","image","enable_prometheus","registry","image_registry","username","password","api","then","catch","error","BorderLinearProgress","height","borderRadius","colorPrimary","bar","padChart","LinearProgress","allValue","marginBottom","currentUsage","marginTop","centerItem","maxValue","currValue","healthStatus","loading","capacity","unit","used","parts","niceBytes","split","percentagelValue","Loader","ErrorBlock","errorMessage","withBreak","Stack","spacing","md","alignItems","LabelValuePair","healthStatusToClass","health_status","redState","yellowState","greenState","greyState","StorageSummary","tenant","status","usage","raw_usage","raw","getToggle","toggleValue","idPrefix","switchOnly","featureRowStyle","display","justifyContent","flexFlow","featureItemStyleProps","sx","flex","minWidth","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenantInfo","logEnabled","get","monitoringEnabled","encryptionEnabled","minioTLS","consoleTLS","consoleEnabled","adEnabled","oidcEnabled","tenantDetailsStyles","warning","success","centerAlign","detailSection","float","fontStyle","wordWrap","overflowWrap","clear","linkedSection","containerForHeader","match","poolCount","setPoolCount","instances","setInstances","volumes","setVolumes","updateMinioVersion","setUpdateMinioVersion","tenantName","params","tenantNamespace","pools","total_volumes","total_instances","SectionTitle","separator","currentState","AButton","overflow","textOverflow","whiteSpace","wordBreak","href","endpoints","minio","rel","console","write_quorum","drives_online","drives_offline","Box","errorBlock","component","_excluded","joinChildren","childrenArray","React","filter","Boolean","reduce","output","child","index","push","key","StackRoot","styled","slot","overridesResolver","props","styles","ownerState","_extends","handleBreakpoints","resolveBreakpointValues","values","breakpoints","propValue","flexDirection","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","deepmerge","row","column","getValue","inProps","ref","themeProps","useThemeProps","extendSxProp","divider","other","_objectWithoutPropertiesLoose","_jsx","as"],"sourceRoot":""}