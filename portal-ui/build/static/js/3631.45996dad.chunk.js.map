{"version":3,"file":"static/js/3631.45996dad.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SetAccessPolicy.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { ChangeAccessPolicyIcon } from \"../../../../icons\";\nimport CodeMirrorWrapper from \"../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    codeMirrorContainer: {\n      marginBottom: 20,\n      \"& label\": {\n        marginBottom: \".5rem\",\n      },\n      \"& label + div\": {\n        display: \"none\",\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\ncreateStyles({\n  ...modalStyleUtils,\n  ...spacingUtils,\n});\n\ninterface ISetAccessPolicyProps {\n  classes: any;\n  open: boolean;\n  bucketName: string;\n  actualPolicy: string;\n  actualDefinition: string;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst SetAccessPolicy = ({\n  classes,\n  open,\n  bucketName,\n  actualPolicy,\n  actualDefinition,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: ISetAccessPolicyProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [accessPolicy, setAccessPolicy] = useState<string>(\"\");\n  const [policyDefinition, setPolicyDefinition] = useState<string>(\"\");\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/set-policy`, {\n        access: accessPolicy,\n        definition: policyDefinition,\n      })\n      .then((res) => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    setAccessPolicy(actualPolicy);\n    setPolicyDefinition(\n      actualDefinition\n        ? JSON.stringify(JSON.parse(actualDefinition), null, 4)\n        : \"\"\n    );\n  }, [setAccessPolicy, actualPolicy, setPolicyDefinition, actualDefinition]);\n\n  return (\n    <ModalWrapper\n      title=\"Change Access Policy\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      titleIcon={<ChangeAccessPolicyIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <SelectWrapper\n                value={accessPolicy}\n                label=\"Access Policy\"\n                id=\"select-access-policy\"\n                name=\"select-access-policy\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  setAccessPolicy(e.target.value as string);\n                }}\n                options={[\n                  { value: \"PRIVATE\", label: \"Private\" },\n                  { value: \"PUBLIC\", label: \"Public\" },\n                  { value: \"CUSTOM\", label: \"Custom\" },\n                ]}\n              />\n            </Grid>\n            {accessPolicy === \"CUSTOM\" && (\n              <Grid item xs={12} className={classes.codeMirrorContainer}>\n                <CodeMirrorWrapper\n                  label={`Write Policy`}\n                  value={policyDefinition}\n                  onBeforeChange={(editor, data, value) => {\n                    setPolicyDefinition(value);\n                  }}\n                  editorHeight={\"350px\"}\n                />\n              </Grid>\n            )}\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              disabled={addLoading}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                addLoading || (accessPolicy === \"CUSTOM\" && !policyDefinition)\n              }\n            >\n              Set\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SetAccessPolicy));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport \"codemirror/theme/dracula.css\";\n/** Code mirror */\nimport CodeMirror, { Extension } from \"@uiw/react-codemirror\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { json } from \"@codemirror/lang-json\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\n\n/** Code mirror */\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon, EditorThemeSwitchIcon } from \"../../../../../icons\";\nimport RBIconButton from \"../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { EditorView } from \"@codemirror/view\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst langHighlight: Record<string, any> = {\n  json,\n  yaml: () => StreamLanguage.define(yaml),\n};\n\nconst lightTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#FBFAFA\",\n    },\n    \".cm-content\": {\n      caretColor: \"#05122B\",\n    },\n    \"&.cm-focused .cm-cursor\": {\n      borderLeftColor: \"#05122B\",\n    },\n    \".cm-gutters\": {\n      backgroundColor: \"#FBFAFA\",\n      color: \"#000000\",\n      border: \"none\",\n    },\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      color: \"#2781B0\",\n      \"& .ͼc\": {\n        color: \"#C83B51\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#dde1f1\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#05122B\",\n      color: \"#ffffff\",\n    },\n    \".cm-selectionMatch\": {\n      backgroundColor: \"#ebe7f1\",\n    },\n    \".cm-selectionLayer\": {\n      fontWeight: 500,\n    },\n    \" .cm-selectionBackground\": {\n      backgroundColor: \"#a180c7\",\n      color: \"#ffffff\",\n    },\n  },\n  {\n    dark: false,\n  }\n);\n\nconst darkTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#282a36\",\n      color: \"#ffb86c\",\n    },\n\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      \"& .ͼd, & .ͼc\": {\n        color: \"#8e6cef\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#44475a\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#842de5\",\n      color: \"#ff79c6\",\n    },\n    \".cm-selectionLayer .cm-selectionBackground\": {\n      backgroundColor: \"green\",\n    },\n  },\n  {\n    dark: true,\n  }\n);\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  const [isDarkTheme, setIsDarkTheme] = useState<boolean>(false);\n\n  //based on the language mode pick . default to json\n  let extensionList: Extension[] = [];\n  if (langHighlight[mode]) {\n    extensionList = [...extensionList, langHighlight[mode]()];\n  }\n\n  return (\n    <React.Fragment>\n      <InputLabel className={classes.inputLabel}>\n        <span>{label}</span>\n        {tooltip !== \"\" && (\n          <div className={classes.tooltipContainer}>\n            <Tooltip title={tooltip} placement=\"top-start\">\n              <div className={classes.tooltip}>\n                <HelpIcon />\n              </div>\n            </Tooltip>\n          </div>\n        )}\n      </InputLabel>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        sx={{\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <Grid item xs={12}>\n          <CodeMirror\n            value={value}\n            theme={isDarkTheme ? darkTheme : lightTheme}\n            extensions={extensionList}\n            editable={!readOnly}\n            basicSetup={true}\n            height={editorHeight}\n            onChange={(v: string, vu: any) => {\n              onBeforeChange(null, null, v);\n            }}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            borderTop: \"1px solid #eaeaea\",\n            background: isDarkTheme ? \"#282c34\" : \"#f7f7f7\",\n          }}\n        >\n          <Box\n            className={isDarkTheme ? \"dark-theme\" : \"\"}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"2px\",\n              paddingRight: \"5px\",\n              justifyContent: \"flex-end\",\n              \"& button\": {\n                height: \"26px\",\n                width: \"26px\",\n                padding: \"2px\",\n                \" .min-icon\": {\n                  marginLeft: \"0\",\n                },\n              },\n\n              \"&.dark-theme button\": {\n                background: \"#FFFFFF\",\n              },\n            }}\n          >\n            <RBIconButton\n              tooltip={\"Change theme\"}\n              onClick={() => {\n                setIsDarkTheme(!isDarkTheme);\n              }}\n              text={\"\"}\n              icon={<EditorThemeSwitchIcon />}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n            <CopyToClipboard text={value}>\n              <RBIconButton\n                tooltip={\"Copy to Clipboard\"}\n                onClick={() => {}}\n                text={\"\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"outlined\"}\n              />\n            </CopyToClipboard>\n          </Box>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}"],"names":["createStyles","modalStyleUtils","spacingUtils","connector","connect","setModalErrorSnackMessage","withStyles","theme","codeMirrorContainer","marginBottom","display","formFieldStyles","classes","open","bucketName","actualPolicy","actualDefinition","closeModalAndRefresh","useState","addLoading","setAddLoading","accessPolicy","setAccessPolicy","policyDefinition","setPolicyDefinition","useEffect","JSON","stringify","parse","title","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","api","access","definition","then","res","catch","err","container","item","xs","className","modalFormScrollable","formFieldRow","value","label","id","name","onChange","target","options","onBeforeChange","editor","data","editorHeight","modalButtonBar","type","variant","color","onClick","disabled","langHighlight","json","yaml","StreamLanguage","lightTheme","EditorView","backgroundColor","caretColor","borderLeftColor","border","borderRight","fontSize","fontWeight","dark","darkTheme","fieldBasic","tooltip","mode","readOnly","isDarkTheme","setIsDarkTheme","extensionList","inputLabel","tooltipContainer","placement","sx","extensions","editable","basicSetup","height","v","vu","borderTop","background","alignItems","padding","paddingRight","justifyContent","width","marginLeft","text","icon","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","message","customSize","paper","fullWidth","detailedErrorMsg","length","scroll","event","reason","root","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","writable","configurable","defineProperty","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","call","assertThisInitialized"],"sourceRoot":""}