{"version":3,"file":"static/js/2763.58b7220d.chunk.js","mappings":"wRAsGMA,EAAqB,CACzBC,qBAAAA,EAAAA,IAGIC,GAAYC,EAAAA,EAAAA,KARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,MAA2B,CACjDC,iBAAkBC,GAAAA,CAAIF,EAAQ,oBAAoB,MAOTJ,GAE3C,WAAeO,EAAAA,EAAAA,IAnEA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,UACRC,EAAAA,OAiEP,CAAkCR,GA9DL,SAAC,GAQA,IAP5BS,EAO2B,EAP3BA,WACAC,EAM2B,EAN3BA,YACAC,EAK2B,EAL3BA,YACAC,EAI2B,EAJ3BA,iBACAC,EAG2B,EAH3BA,WACAd,EAE2B,EAF3BA,qBACAe,EAC2B,EAD3BA,QAEA,UAA2BH,EAA3B,GAAOI,EAAP,KAAeC,EAAf,KAMA,GAAyCC,EAAAA,EAAAA,IAJpB,kBAAML,GAAiB,MACzB,SAACM,GAAD,OAA+BnB,EAAqBmB,MAGvE,eAAOC,EAAP,KAAsBC,EAAtB,KAEA,IAAKT,EACH,OAAO,KAYT,OACE,SAAC,IAAD,CACEU,MAAK,aACLC,YAAa,SACbC,OAAQd,EACRe,WAAW,SAAC,KAAD,IACXC,UAAWN,EACXO,UAhBoB,WACtB,IAAMC,GAAW,UAAQjB,UAClBiB,EAAYZ,GAEnBK,EAAgB,MAAD,0BAA2BP,EAA3B,SAA8C,CAC3De,KAAMD,KAYNE,QAzBY,kBAAMjB,GAAiB,IA0BnCkB,qBACE,UAAC,IAAD,qDAC0C,KACxC,eAAGC,UAAWjB,EAAQkB,SAAtB,UACGjB,EADH,MACcC,KACT,IAJP","sources":["screens/Console/Buckets/BucketDetails/DeleteBucketTagModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AppState } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\n\ninterface IDeleteBucketTagModal {\n  deleteOpen: boolean;\n  currentTags: any;\n  bucketName: string;\n  selectedTag: string[];\n  onCloseAndUpdate: (refresh: boolean) => void;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n  });\n\nconst DeleteBucketTagModal = ({\n  deleteOpen,\n  currentTags,\n  selectedTag,\n  onCloseAndUpdate,\n  bucketName,\n  setErrorSnackMessage,\n  classes,\n}: IDeleteBucketTagModal) => {\n  const [tagKey, tagLabel] = selectedTag;\n\n  const onDelSuccess = () => onCloseAndUpdate(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => onCloseAndUpdate(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedTag) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    const cleanObject = { ...currentTags };\n    delete cleanObject[tagKey];\n\n    invokeDeleteApi(\"PUT\", `/api/v1/buckets/${bucketName}/tags`, {\n      tags: cleanObject,\n    });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Tag`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the tag{\" \"}\n          <b className={classes.wrapText}>\n            {tagKey} : {tagLabel}\n          </b>{\" \"}\n          ?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst mapStateToProps = ({ system }: AppState) => ({\n  distributedSetup: get(system, \"distributedSetup\", false),\n});\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(DeleteBucketTagModal));\n"],"names":["mapDispatchToProps","setErrorSnackMessage","connector","connect","system","distributedSetup","get","withStyles","theme","createStyles","modalBasic","deleteOpen","currentTags","selectedTag","onCloseAndUpdate","bucketName","classes","tagKey","tagLabel","useApi","err","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","cleanObject","tags","onClose","confirmationContent","className","wrapText"],"sourceRoot":""}